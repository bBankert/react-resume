{"version":3,"sources":["components/navigation/navigationItem.js","components/navigation/navigation.js","containers/header.js","components/cards/introduction.js","components/cards/card/card-content.js","components/cards/card/card.js","components/cards/cards.js","containers/content.js","components/loading/loading.js","App.js","serviceWorker.js","index.js"],"names":["NavigationItem","props","className","onClick","event","preventDefault","index","target","href","indexOf","substring","length","$","stop","animate","scrollTop","offset","top","scrollToElement","link","replace","toLocaleLowerCase","Navigation","id","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","data","map","idx","key","role","aria-haspopup","aria-labelledby","window","location","download","Header","header","Introduction","src","introduction","Image","alt","Name","Title","CardContent","content","Subheading","Details","detail","Link","Card","card","Subsections","section","Cards","Content","Object","keys","Loading","modal","tabIndex","React","Component","App","useState","loading","setLoading","setData","useEffect","fetch","then","res","json","Fragment","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.552e9a31.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nconst NavigationItem = props => {\r\n\r\n    //for smooth scrolling\r\n    function scrollToElement(event){\r\n        event.preventDefault();\r\n        //get index of # symbol\r\n        let index = (event.target.href).indexOf('#');\r\n        let target = (event.target.href).substring(index, (event.target.href).length);\r\n        //scroll to element\r\n        $(\"html,body\").stop().animate({\r\n            scrollTop: $(target).offset().top - 25\r\n        },\"slow\",\"swing\");\r\n    }\r\n\r\n    return(\r\n    <li className=\"nav-item\">\r\n        <a className=\"nav-link\" onClick={(event) => scrollToElement(event)} href={\"#\"+(props.link.replace(\" \",\"-\").toLocaleLowerCase())}>{props.link}</a>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport NavigationItem from './navigationItem';\r\n\r\nconst Navigation = props => (\r\n    <nav id=\"navigation\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          {props.data.map((link,idx) => \r\n              <NavigationItem key={'link-'+idx} link={link}/>\r\n          )}\r\n          {/* Static links */}\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Contact\r\n            </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n              <a className=\"dropdown-item\" href={window.location + \"documents/Resume.pdf\" } download>Download Resume</a>\r\n              <a className=\"dropdown-item\" href=\"http://www.github.com/bBankert\">GitHub</a>\r\n              <a className=\"dropdown-item\" href=\"mailto:bankert.brandon@gmail.com\">Contact Me</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from '../components/navigation/navigation';\r\n\r\nconst Header = props => (\r\n    <div id=\"header\">\r\n        {props.header && props.header.length > 0 ? <Navigation data={props.header}/> : <p>Loading</p>}\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport './introduction.css';\r\n\r\nconst Introduction = props => {\r\n\r\n\r\n    return (\r\n    <div id=\"introduction\" className=\"my-4\">\r\n        <div className=\"col-12\">\r\n            <img src={props.introduction.Image} alt=\"broken link\"/>\r\n        </div>\r\n        <div className=\"col-12\">\r\n            <h1 className=\"name\">{props.introduction.Name}</h1>\r\n            <h2 className=\"title text-muted\">{props.introduction.Title}</h2>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Introduction;","import React from 'react';\r\n\r\nconst CardContent = props => {\r\n\r\n    return(\r\n        <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n                <h4>{props.content.Subheading}</h4>\r\n                <ul>\r\n                    {props.content.Details.map((detail,idx) => \r\n                        <li key={props.content.Subheading + '-detail-'+idx}>{detail}</li>\r\n                    )}\r\n                    {props.content.Link ? <a href={props.content.Link}><li>Live Link</li></a> : \"\"}\r\n                </ul>\r\n            </li>    \r\n        </ul>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default CardContent;","import React from 'react';\r\nimport CardContent from './card-content';\r\n\r\nconst Card = props => {\r\n\r\n\r\n    return(\r\n\r\n        <div id={(props.card.Header.replace(\" \",\"-\").toLocaleLowerCase())} className=\"my-4\">\r\n         <div className=\"card\">\r\n             <div className=\"card-header bg-dark text-white\">\r\n                <h3>{props.card.Header}</h3>\r\n             </div>\r\n             <div className=\"card-body\">\r\n                 {props.card.Subsections.map((section,idx) => \r\n                 <CardContent key={props.card.Header+'-subsection-'+idx} content = {section} />  \r\n                 )}\r\n             </div>\r\n         </div>\r\n     </div>\r\n        \r\n        \r\n        );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card/card';\r\n\r\nconst Cards = props => {\r\n    return(\r\n        <div>\r\n            {props.content.map((card,idx) =>\r\n                <Card key={'card-'+idx} card={card}/>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React from  'react';\r\nimport Introduction from '../components/cards/introduction';\r\nimport Cards from '../components/cards/cards';\r\n\r\nconst Content = props => {\r\n\r\n\r\n    return(\r\n\r\n    <div className=\"offset-md-3 col-md-6 col-sm-12\">\r\n        <Introduction introduction={props.data.Introduction}/>\r\n        {props.data && Object.keys(props.data.Content).length > 0  ?<Cards content={props.data.Content}/> : <p>Loading...</p>  }\r\n       \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport $ from 'jquery';\r\nimport './loading.css';\r\n\r\nclass Loading extends React.Component {\r\n\r\n    componentDidMount(){\r\n        $('#loadingModal').modal('show');\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        $('#loadingModal').modal('hide');\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(<div id=\"loading\" className=\"col-md-6 offset-md-3 col-sm-12\">\r\n            <div className=\"modal\" id=\"loadingModal\" tabIndex=\"-1\" role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"loader\"></div>\r\n                            <p>Loading, Please Wait...</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Loading;","import React,{useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from './containers/header';\r\nimport Content from  './containers/content';\r\nimport Loading from './components/loading/loading';\r\n\r\nconst App = () => {\r\n\r\n  const [loading,setLoading] = useState(1);\r\n  const [data,setData] = useState({\r\n    Navigation: [],\r\n    Introduction: {},\r\n    Content: {},\r\n  });\r\n\r\n\r\n  useEffect(()=>{\r\n      //live version\r\n      fetch(window.location + \"/data/data.json\")\r\n      .then(res => res.json())\r\n      .then(json => {\r\n      setData(() => ({\r\n        Navigation: json.Navigation,\r\n        Introduction: json.Introduction,\r\n        Content: json.Content,\r\n      }));\r\n      setLoading(0);\r\n    })\r\n\r\n    \r\n    \r\n  },[loading]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {loading === 1 ? <Loading/> : <React.Fragment><Header header={data.Navigation}/>\r\n      <Content data={data}/></React.Fragment>}\r\n      <Loading/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}