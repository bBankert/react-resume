{"version":3,"sources":["components/navigation/navigation.js","containers/header.js","components/cards/introduction.js","components/cards/education.js","components/cards/projects.js","components/cards/work.js","containers/content.js","containers/footer.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","href","Header","Introduction","src","alt","Education","Projects","Work","Content","Footer","download","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mSAeeA,G,kBAZI,SAAAC,GAAK,OAEpB,yBAAKC,GAAG,aAAaC,UAAU,UAC3B,wBAAIA,UAAU,QACV,uBAAGC,KAAK,cAAa,wBAAID,UAAU,OAAd,cACrB,uBAAGC,KAAK,aAAY,wBAAID,UAAU,OAAd,aACpB,uBAAGC,KAAK,iBAAgB,wBAAID,UAAU,OAAd,gCCArBE,EANA,SAAAJ,GAAK,OAChB,yBAAKC,GAAG,UACJ,kBAAC,EAAD,QCSOI,G,MAZM,SAAAL,GAAK,OACtB,yBAAKC,GAAG,eAAeC,UAAU,QAC7B,yBAAKA,UAAU,kCACX,yBAAKI,IAAI,oBAAoBC,IAAI,kBAErC,yBAAKL,UAAU,kCACX,wBAAIA,UAAU,QAAd,mBACA,wBAAIA,UAAU,oBAAd,gCCQGM,EAfG,SAAAR,GAAK,OACnB,yBAAKC,GAAG,aAAaC,UAAU,QAC3B,yBAAKA,UAAU,QACX,yBAAKA,UAAU,uBAAf,2BAGA,yBAAKA,UAAU,aACX,uBAAGA,UAAU,aAAb,4BACA,uBAAGA,UAAU,aAAb,aACA,uBAAGA,UAAU,aAAb,gDC0CAO,EAnDC,SAAAT,GAAK,OAClB,yBAAKC,GAAG,WAAWC,UAAU,QACzB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,uBAAf,qBAGA,yBAAKA,UAAU,aACX,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,mBACV,0CACA,4BACI,8FACA,+EACA,0FACA,6DACA,uBAAGC,KAAK,oCAAmC,4CAGnD,wBAAID,UAAU,mBACV,8CACA,4BACI,gGACA,iFACA,kEACA,uBAAGC,KAAK,8BAA6B,4CAG7C,wBAAID,UAAU,mBACd,+CACI,4BACI,4EACA,8IACI,4BACI,mGAGR,gFACI,4BACI,0IACA,2GAGR,uBAAGC,KAAK,qCAAoC,mECGzDO,EA7CF,SAAAV,GAAK,OACd,yBAAKC,GAAG,eAAeC,UAAU,QAC5B,yBAAKA,UAAU,QACZ,yBAAKA,UAAU,uBAAf,2BAGA,yBAAKA,UAAU,aACX,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,mBACV,qEACA,4BACI,sGACA,8EACA,uGACA,+EACA,wGACA,sEACA,4DAGR,wBAAIA,UAAU,mBACV,gFACA,4BACI,mGACA,0GACA,oEACA,sHACA,+EAGR,wBAAIA,UAAU,mBACV,+EACA,4BACI,gHACA,0GACA,oFACA,gHCvBbS,EATC,SAAAX,GAAK,OACjB,yBAAKE,UAAU,kCACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAOU,G,MARA,SAAAZ,GAAK,OAChB,yBAAKC,GAAG,SAASC,UAAU,UACvB,uBAAGC,KAAK,uBAAuBU,UAAQ,GAAvC,mBACA,uBAAGV,KAAK,kCAAR,UACA,uBAAGA,KAAK,oCAAR,iBCYOW,EAZH,WAGV,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,uBCFcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.34eb3e8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './navigation.css';\r\n\r\nconst Navigation = props => (\r\n    //hide on phones (sm)\r\n    <div id=\"navigation\" className=\"col-12\">\r\n        <ul className=\"pl-0\">\r\n            <a href=\"#education\"><li className=\"col\">Education</li></a>\r\n            <a href=\"#projects\"><li className=\"col\">Projects</li></a>\r\n            <a href=\"#professional\"><li className=\"col\">Professional Experience</li></a>\r\n        </ul>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from '../components/navigation/navigation';\r\n\r\nconst Header = props => (\r\n    <div id=\"header\">\r\n        <Navigation/>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport './introduction.css';\r\nconst Introduction = props => (\r\n    <div id=\"introduction\" className=\"my-4\">\r\n        <div className=\"offset-md-3 col-md-6 col-sm-12\">\r\n            <img src=\"./images/face.png\" alt=\"broken image\"/>\r\n        </div>\r\n        <div className=\"offset-md-3 col-md-6 col-sm-12\">\r\n            <h3 className=\"name\">Brandon Bankert</h3>\r\n            <h4 className=\"title text-muted\">Full Stack Web Developer</h4>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Introduction;","import React from 'react';\r\n\r\nconst Education = props => (\r\n    <div id=\"eductation\" className=\"my-4\">\r\n        <div className=\"card\">\r\n            <div className=\"card-header bg-info\">\r\n                Millersville University\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">Graduated: December 2019</p>\r\n                <p className=\"card-text\">GPA: 3.92</p>\r\n                <p className=\"card-text\">Bachelors of Science in Computer Science</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Education;","import React from 'react';\r\n\r\nconst Projects = props => (\r\n    <div id=\"projects\" className=\"my-4\">\r\n        <div className=\"card\">\r\n            <div className=\"card-header bg-info\">\r\n                Personal Projects\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <h5>UML Editor</h5>\r\n                        <ul>\r\n                            <li>Developed a client side UML editor with Angular and Typescript</li>\r\n                            <li>Worked with team members in a Agile methodology</li>\r\n                            <li>Write Unit Tests for regression testing with Jenkins CI/CD</li>\r\n                            <li>Use GitHub for source control</li>\r\n                            <a href=\"https://gwca-uml.firebaseapp.com\"><li>Live Link</li></a>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <h5>Resume Webpage</h5>\r\n                        <ul>\r\n                            <li>Use Javascript to develop functions for elements and the sidebar</li>\r\n                            <li>Use Photoshop to create images for the background</li>\r\n                            <li>Made the webpage mobile responsive</li>\r\n                            <a href=\"https://bbankert.github.io\"><li>Live Link</li></a>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                    <h5>ASP.NET with C#</h5>\r\n                        <ul>\r\n                            <li>Created a basic web application through .NET</li>\r\n                            <li>Developed a 'login' web application that allows for users to see and modify their information on the SQLite DB.\r\n                                <ul>\r\n                                    <li>There is also an 'admin' that can see all of the other 'accounts'</li>\r\n                                </ul>\r\n                            </li>\r\n                            <li>Create a 'Recipe Book' application in ASP.NET MVC\r\n                                <ul>\r\n                                    <li>Used session data to be able to keep the user data globally accessible for the duration of the application</li>\r\n                                    <li>Made a code-first database that holds multiple many-to-many relationships</li>\r\n                                </ul>\r\n                            </li>\r\n                            <a href=\"https://github.com/bBankert/.NET/\"><li>Link to other .NET projects</li></a>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default  Projects;","import React from 'react';\r\n\r\nconst Work = props => (\r\n    <div id=\"professional\" className=\"my-4\">\r\n         <div className=\"card\">\r\n            <div className=\"card-header bg-info\">\r\n                Professional Experience\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <h5>Full Stack Developer : Select Medical</h5>\r\n                        <ul>\r\n                            <li>Developed and enhance web applications written in ASP.NET and Sitecore</li>\r\n                            <li>Write and Enhance the API for form submissions</li>\r\n                            <li>Write SQL queries for views and stored procdures for the API to execute</li>\r\n                            <li>Worked with team members in a Agile methodology</li>\r\n                            <li>Write Powershell powershell for automation of back-end tasks in Sitecore</li>\r\n                            <li>Write SSIS Packages automate ETL tasks</li>\r\n                            <li>Use TFS for source control</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <h5>Web Developer Intern : Highmark Health Solutions</h5>\r\n                        <ul>\r\n                            <li>Developed a reference site for the company's intranet using Angular</li>\r\n                            <li>Adjusted the site to be mobile responsive and 508 compliant with Bootstrap</li>\r\n                            <li>Developed using an agile methodology</li>\r\n                            <li>Created documentation for future developers to reference for both the site and Angular</li>\r\n                            <li>Assisted other interns with Angular questions</li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <h5>IT Helpdesk Intern : University of Pennsylvania</h5>\r\n                        <ul>\r\n                            <li>Acted as point of contact for all techincal issues both students and faculty had</li>\r\n                            <li>Assisted higher level IT members provide solutions for more complex issues</li>\r\n                            <li>Imaged and deployed hardware for new faculty members</li>\r\n                            <li>Created documentation for software usage that met the college's standards</li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Work;","import React from  'react';\r\nimport Introduction from '../components/cards/introduction';\r\nimport Education from '../components/cards/education';\r\nimport Projects from '../components/cards/projects';\r\nimport Work from '../components/cards/work';\r\n\r\nconst Content = props => (\r\n    <div className=\"offset-md-2 col-md-7 col-sm-12\">\r\n        <Introduction/>\r\n        <Education/>\r\n        <Projects/>\r\n        <Work/>\r\n    </div>\r\n);\r\n\r\nexport default Content;","import React from 'react';\r\nimport './footer.css';\r\n\r\nconst Footer = props => (\r\n    <div id=\"footer\" className=\"col-12\">\r\n        <a href=\"documents/Resume.pdf\" download>Download Resume</a>\r\n        <a href=\"http://www.github.com/bBankert\">GitHub</a>\r\n        <a href=\"mailto:bankert.brandon@gmail.com\">Contact Me</a>\r\n    </div>\r\n);\r\n\r\nexport default Footer;","import React,{Component} from 'react';\n\nimport './App.css';\nimport Header from './containers/header';\nimport Content from  './containers/content';\nimport Footer from './containers/footer';\n\nconst App = () => {\n\n\n  return (\n    <div>\n      <Header/>\n      <Content/>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}